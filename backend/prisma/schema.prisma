datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  password            String
  role                Role      @default(FAN)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  streams             Stream[]
  subscriptionActive  Boolean   @default(false)

  profile             Profile?   // ðŸ‘ˆ one-to-one relation with Profile
}

model Profile {
  id          Int     @id @default(autoincrement())
  userId      Int     @unique
  user        User    @relation(fields: [userId], references: [id])
  bio         String?
  avatarUrl   String?   // original Cloudinary upload
  avatarSizes Json?     // ðŸ‘ˆ JSON object with small/medium/large variants
}

model StripeEvent {
  id        Int      @id @default(autoincrement())
  type      String
  data      Json
  createdAt DateTime @default(now())
}

enum Role {
  FAN
  ARTIST
  ADMIN
}

model Track {
  id        Int      @id @default(autoincrement())
  title     String
  artist    String
  artwork   String?
  createdAt DateTime @default(now())
  streams   Stream[]
}

model Stream {
  id        Int      @id @default(autoincrement())
  trackId   Int
  track     Track    @relation(fields: [trackId], references: [id])
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Payout {
  id        Int      @id @default(autoincrement())
  artistId  Int
  amount    Float
  createdAt DateTime @default(now())
}

